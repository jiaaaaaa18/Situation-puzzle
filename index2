<script>
// 這裡設定 Ollama 的伺服器位置
// 本機測試時用 localhost；若用 ngrok 就改成 ngrok 給的網址，例如：
// const OLLAMA_API = "https://abc123.ngrok.io/api/generate";
const OLLAMA_API = "https://unarguable-untampered-gil.ngrok-free.dev";

// 儲存目前的題目與答案
let currentRiddle = { q: "", a: "" };

// 叫 Ollama 出題
async function newRiddle() {
  document.getElementById("riddle").innerText = "🧠 AI 正在出題中...";
  document.getElementById("response").innerText = "";
  document.getElementById("answer").value = "";

  const prompt = `
  你是一個海龜湯出題者，請生成一個有趣、懸疑但合邏輯的海龜湯題目。
  格式如下：
  題目：xxxx
  答案：xxxx
  不要多餘文字。
  `;

  try {
    const res = await fetch(OLLAMA_API, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({
        model: "llama3.2",
        prompt: prompt
      })
    });

    // Ollama 是以串流回傳的，我們把它完整讀出
    const reader = res.body.getReader();
    const decoder = new TextDecoder("utf-8");
    let fullText = "";

    while (true) {
      const { done, value } = await reader.read();
      if (done) break;
      fullText += decoder.decode(value);
    }

    // 從回傳文字中取出題目與答案
    const match = fullText.match(/題目[:：](.*)\n*答案[:：](.*)/);
    if (match) {
      currentRiddle.q = match[1].trim();
      currentRiddle.a = match[2].trim();
    } else {
      currentRiddle.q = "AI 出題失敗，請再試一次。";
      currentRiddle.a = "";
    }

    document.getElementById("riddle").innerText = currentRiddle.q;
  } catch (err) {
    console.error(err);
    document.getElementById("riddle").innerText =
      "⚠️ 無法連線到 Ollama，請確認是否有執行 ollama serve 或設定 ngrok URL。";
  }
}

// 開始遊戲
function startGame() {
  document.getElementById("start-screen").classList.remove("active");
  document.getElementById("game-screen").classList.add("active");
  newRiddle();
}

// 使用者提交答案
async function submitAnswer() {
  const userAnswer = document.getElementById("answer").value.trim();
  const responseBox = document.getElementById("response");

  if (!userAnswer) {
    alert("請先輸入答案！");
    return;
  }

  responseBox.textContent = "AI 判斷中...";

  // 呼叫 Ollama 判斷玩家答案是否正確
  const checkPrompt = `
  題目：「${currentRiddle.q}」
  正確答案：「${currentRiddle.a}」
  使用者的回答：「${userAnswer}」
  請只回答「正確」或「錯誤」，不需要多餘說明。
  `;

  try {
    const res = await fetch(OLLAMA_API, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({
        model: "llama3.2",
        prompt: checkPrompt
      })
    });

    const reader = res.body.getReader();
    const decoder = new TextDecoder("utf-8");
    let fullText = "";

    while (true) {
      const { done, value } = await reader.read();
      if (done) break;
      fullText += decoder.decode(value);
    }

    if (fullText.includes("正確")) {
      responseBox.textContent = "✅ 答對了！太棒了！";
    } else {
      responseBox.textContent = "❌ 錯誤。正確答案是：「" + currentRiddle.a + "」。";
    }

    setTimeout(newRiddle, 3000);
  } catch (err) {
    console.error(err);
    responseBox.textContent = "⚠️ 判斷失敗，請檢查 Ollama 是否運行中。";
  }
}
</script>
